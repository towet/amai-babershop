import React, { useState, useEffect, useRef } from "react";
import { Button } from "@/components/ui/button";
import { ArrowRight, Calendar, Clock, Star, Scissors, Zap, Award, TrendingUp, Smartphone, Users, Download, Shield, CheckCircle, BellRing, Camera } from "lucide-react";
import { motion, useMotionValue, useTransform, AnimatePresence } from "framer-motion";

export const MobileAppShowcaseSection = () => {
  // State for interactive elements
  const [activeTab, setActiveTab] = useState(0);
  const [selectedService, setSelectedService] = useState(0);
  const [progress, setProgress] = useState(0);
  
  // Mouse position for 3D tilt effect
  const mouseX = useMotionValue(0);
  const mouseY = useMotionValue(0);
  
  // References for the phone mockup and container
  const phoneRef = useRef<HTMLDivElement>(null);
  const containerRef = useRef<HTMLDivElement>(null);
  
  // Transform mouse position to rotation values
  const rotateX = useTransform(mouseY, [-300, 300], [10, -10]);
  const rotateY = useTransform(mouseX, [-300, 300], [-10, 10]);
  
  // App screens for carousel
  const [currentScreen, setCurrentScreen] = useState(0);
  const screens = [
    { id: 0, name: "Booking", color: "from-blue-400 to-indigo-600" },
    { id: 1, name: "Services", color: "from-purple-400 to-pink-600" },
    { id: 2, name: "Analytics", color: "from-orange-400 to-red-600" },
  ];
  
  // Services data
  const services = [
    { name: "Clipper & beard special", duration: "1 hr", price: "$95" },
    { name: "Clipper, scissor & shave", duration: "1 hr", price: "$85" },
    { name: "Scissor cut", duration: "1 hr", price: "$75" },
  ];

  // Appointment slots data
  const appointmentSlots = [
    { day: "SUN", date: "6", time: "10:30", available: true },
    { day: "MON", date: "7", time: "11:00", available: true },
    { day: "TUE", date: "8", time: "2:30", available: false },
    { day: "WED", date: "9", time: "9:00", available: true },
    { day: "THU", date: "10", time: "4:00", available: true },
  ];

  useEffect(() => {
    // Animate progress
    const interval = setInterval(() => {
      setProgress(prev => {
        if (prev < 68) return prev + 1;
        return prev;
      });
    }, 30);

    // Screen rotation for mobile app carousel
    const screenInterval = setInterval(() => {
      setCurrentScreen(prev => (prev + 1) % screens.length);
    }, 5000);
    
    // Tab rotation
    const tabInterval = setInterval(() => {
      setActiveTab(prev => (prev + 1) % 3);
    }, 5000);
    
    // Mouse move handler for 3D tilt effect
    const handleMouseMove = (e: MouseEvent) => {
      if (containerRef.current) {
        const rect = containerRef.current.getBoundingClientRect();
        const centerX = rect.left + rect.width / 2;
        const centerY = rect.top + rect.height / 2;
        mouseX.set(e.clientX - centerX);
        mouseY.set(e.clientY - centerY);
      }
    };
    
    // Add mouse move event listener for container
    window.addEventListener('mousemove', handleMouseMove);

    return () => {
      clearInterval(interval);
      clearInterval(tabInterval);
      clearInterval(screenInterval);
      window.removeEventListener('mousemove', handleMouseMove);
    };
  }, [mouseX, mouseY, screens.length]);

  return (
    <section className="py-24 px-6 bg-black overflow-hidden relative">
      {/* Animated background elements */}
      <div className="absolute -top-80 left-1/3 w-96 h-96 bg-gradient-to-br from-blue-500/20 to-purple-500/10 rounded-full blur-3xl animate-pulse-slow"></div>
      <div className="absolute -bottom-40 right-20 w-80 h-80 bg-gradient-to-tr from-purple-500/20 to-orange-500/10 rounded-full blur-3xl animate-pulse-slow"></div>
      <div className="absolute top-40 -right-20 w-72 h-72 bg-gradient-to-bl from-orange-500/10 to-red-500/5 rounded-full blur-3xl animate-float-slow"></div>
      
      <div className="max-w-7xl mx-auto">
        <div className="grid lg:grid-cols-2 gap-16 items-center">
          {/* Left content - Text and feature badges */}
          <div className="space-y-10 relative z-10">
            <motion.div 
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6 }}
              className="space-y-8"
            >
              {/* Award badge with animation */}
              <motion.div 
                initial={{ scale: 0.8 }}
                animate={{ scale: [0.8, 1.1, 1] }}
                transition={{ duration: 1.2, delay: 0.3 }}
                className="flex space-x-3 items-center"
              >
                <div className="bg-gradient-to-r from-purple-500 to-blue-500 rounded-full p-2 shadow-xl">
                  <Award className="h-5 w-5 text-white" />
                </div>
                <span className="text-gray-300 uppercase tracking-wider text-sm font-medium">Award-winning app</span>
              </motion.div>

              {/* Main heading with gradient text */}
              <h2 className="font-['Bebas_Neue'] text-5xl md:text-6xl leading-none text-white tracking-tight">
                <motion.span 
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  transition={{ duration: 0.8, delay: 0.5 }}
                  className="text-transparent bg-clip-text bg-gradient-to-r from-orange-400 to-pink-500"
                >
                  LOCK IN
                </motion.span>
                <motion.span 
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  transition={{ duration: 0.8, delay: 0.8 }}
                  className="block mt-1 text-transparent bg-clip-text bg-gradient-to-r from-blue-400 to-purple-500"
                >
                  LOYALTY
                </motion.span>
              </h2>
              
              <motion.p 
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ duration: 0.8, delay: 1.1 }}
                className="text-lg text-gray-300 max-w-lg"
              >
                Launch your own booking app so clients tap your icon on their phone. Increase retention, reduce no-shows, and build a stronger connection with your customers.
              </motion.p>
              
              {/* Stats with animations */}
              <div className="flex flex-wrap gap-8 pt-4">
                <motion.div 
                  initial={{ opacity: 0, x: -20 }}
                  animate={{ opacity: 1, x: 0 }}
                  transition={{ duration: 0.5, delay: 1.3 }}
                  className="flex items-center space-x-3"
                >
                  <div className="w-12 h-12 rounded-xl bg-gradient-to-r from-blue-500 to-indigo-600 flex items-center justify-center shadow-lg">
                    <Users className="h-6 w-6 text-white" />
                  </div>
                  <div>
                    <p className="text-white font-medium text-lg">+43%</p>
                    <p className="text-gray-400 text-sm">Client retention</p>
                  </div>
                </motion.div>
                
                <motion.div 
                  initial={{ opacity: 0, x: -20 }}
                  animate={{ opacity: 1, x: 0 }}
                  transition={{ duration: 0.5, delay: 1.5 }}
                  className="flex items-center space-x-3"
                >
                  <div className="w-12 h-12 rounded-xl bg-gradient-to-r from-purple-500 to-pink-600 flex items-center justify-center shadow-lg">
                    <TrendingUp className="h-6 w-6 text-white" />
                  </div>
                  <div>
                    <p className="text-white font-medium text-lg">+68%</p>
                    <p className="text-gray-400 text-sm">Booking rate</p>
                  </div>
                </motion.div>
              </div>
              
              {/* CTA Button with animation */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5, delay: 1.7 }}
                className="pt-4"
              >
                <Button className="bg-gradient-to-r from-orange-500 to-pink-600 hover:from-orange-600 hover:to-pink-700 text-white rounded-full px-8 py-6 text-lg shadow-xl group transition-all duration-300 ease-in-out">
                  <span>Be an Icon</span>
                  <ArrowRight className="ml-2 h-5 w-5 group-hover:translate-x-1 transition-transform" />
                </Button>
              </motion.div>
            </motion.div>
          </div>
          
          {/* Right content - 3D Phone mockups */}
          <div className="relative h-[600px]" ref={containerRef}>
            {/* Main phone with 3D tilt effect */}
            <motion.div
              ref={phoneRef}
              style={{
                rotateX,
                rotateY,
                z: 100,
                perspective: 1000,
              }}
              className="absolute left-1/2 -translate-x-1/2 top-1/2 -translate-y-1/2 z-30"
            >
              <div className="relative">
                {/* Phone frame */}
                <motion.div 
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.8, delay: 0.3 }}
                  className="w-[280px] h-[580px] bg-gradient-to-b from-pink-500 to-purple-600 rounded-[40px] p-3 shadow-[0_0_30px_rgba(236,72,153,0.3)]"
                >
                  <div className="w-full h-full overflow-hidden rounded-[32px] border-[12px] border-black relative">
                    {/* Phone notch */}
                    <div className="absolute top-0 left-1/2 -translate-x-1/2 w-[120px] h-[30px] bg-black rounded-b-[14px] z-10 flex items-center justify-center">
                      <div className="w-14 h-4 bg-black rounded-full relative">
                        <div className="absolute w-2 h-2 rounded-full bg-green-500 top-1/2 -translate-y-1/2 right-2"></div>
                      </div>
                    </div>
                    
                    {/* Screen content */}
                    <div className="relative h-full w-full bg-gradient-to-b from-gray-900 to-black pt-8">
                      <AnimatePresence mode="wait">
                        <motion.div
                          key={currentScreen}
                          initial={{ opacity: 0 }}
                          animate={{ opacity: 1 }}
                          exit={{ opacity: 0 }}
                          transition={{ duration: 0.5 }}
                          className="absolute inset-0 pt-8"
                        >
                          {currentScreen === 0 && (
                            <div className="px-4 h-full">
                              {/* Booking screen */}
                              <div className="flex justify-between items-center mb-6">
                                <div>
                                  <h3 className="text-white text-xl font-bold">Choose Time</h3>
                                  <p className="text-gray-400 text-xs">Select your appointment</p>
                                </div>
                                <div className="bg-gray-800 rounded-full w-10 h-10 flex items-center justify-center">
                                  <Calendar className="w-5 h-5 text-white" />
                                </div>
                              </div>
                              
                              {/* Date selector */}
                              <div className="grid grid-cols-5 gap-2 mb-6">
                                {appointmentSlots.slice(0, 5).map((slot, index) => (
                                  <motion.div
                                    key={index}
                                    whileHover={{ scale: 1.05 }}
                                    className={`rounded-xl p-2 ${index === 0 ? 'bg-gradient-to-r from-orange-500 to-pink-600' : 'bg-gray-800'} flex flex-col items-center`}
                                  >
                                    <span className="text-gray-400 text-xs">{slot.day}</span>
                                    <span className="text-white font-bold text-lg">{slot.date}</span>
                                  </motion.div>
                                ))}
                              </div>
                              
                              {/* Time slots */}
                              <div className="space-y-3 mb-6">
                                <h4 className="text-white font-medium">Available slots</h4>
                                <div className="grid grid-cols-2 gap-2">
                                  {appointmentSlots.map((slot, index) => (
                                    <motion.div
                                      key={index}
                                      whileHover={{ scale: 1.03 }}
                                      className={`p-3 rounded-xl ${slot.available ? 'bg-gray-800' : 'bg-gray-800/40'} ${index === 0 ? 'border border-pink-500' : ''} flex justify-between items-center`}
                                    >
                                      <div className="flex items-center">
                                        <Clock className="w-4 h-4 text-gray-400 mr-2" />
                                        <span className={`${slot.available ? 'text-white' : 'text-gray-500'}`}>{slot.time}</span>
                                      </div>
                                      {index === 0 && (
                                        <div className="w-4 h-4 rounded-full bg-pink-500 flex items-center justify-center">
                                          <CheckCircle className="w-3 h-3 text-white" />
                                        </div>
                                      )}
                                    </motion.div>
                                  ))}
                                </div>
                              </div>
                              
                              {/* Selected service */}
                              <div className="bg-gray-800 rounded-xl p-4 mb-6">
                                <div className="flex justify-between items-center mb-2">
                                  <h4 className="text-white font-medium">Selected service</h4>
                                  <span className="text-pink-500 text-xs">Change</span>
                                </div>
                                <div className="flex justify-between items-center">
                                  <div>
                                    <p className="text-white font-medium">{services[0].name}</p>
                                    <div className="flex items-center">
                                      <Clock className="w-3 h-3 text-gray-400 mr-1" />
                                      <span className="text-gray-400 text-xs">{services[0].duration}</span>
                                    </div>
                                  </div>
                                  <span className="text-orange-500 font-bold">{services[0].price}</span>
                                </div>
                              </div>
                              
                              {/* Book now button */}
                              <div className="absolute bottom-6 left-4 right-4">
                                <motion.button
                                  whileHover={{ scale: 1.03 }}
                                  whileTap={{ scale: 0.98 }}
                                  className="bg-gradient-to-r from-orange-500 to-pink-600 w-full py-3 rounded-xl text-white font-medium shadow-lg"
                                >
                                  Book Appointment
                                </motion.button>
                              </div>
                            </div>
                          )}
                          
                          {currentScreen === 1 && (
                            <div className="px-4 h-full">
                              {/* Services screen */}
                              <div className="flex justify-between items-center mb-6">
                                <div>
                                  <h3 className="text-white text-xl font-bold">Services</h3>
                                  <p className="text-gray-400 text-xs">Choose your service</p>
                                </div>
                                <div className="bg-gray-800 rounded-full w-10 h-10 flex items-center justify-center">
                                  <Scissors className="w-5 h-5 text-white" />
                                </div>
                              </div>
                              
                              {/* Service categories */}
                              <div className="flex space-x-2 mb-6 overflow-x-auto py-1 scrollbar-hide">
                                {["All", "Haircut", "Beard", "Combo", "Special"].map((category, index) => (
                                  <div 
                                    key={index}
                                    className={`px-4 py-2 rounded-full ${index === 0 ? 'bg-gradient-to-r from-purple-500 to-pink-600 text-white' : 'bg-gray-800 text-gray-300'} whitespace-nowrap text-sm`}
                                  >
                                    {category}
                                  </div>
                                ))}
                              </div>
                              
                              {/* Services list */}
                              <div className="space-y-3 mb-6">
                                {services.map((service, index) => (
                                  <motion.div
                                    key={index}
                                    whileHover={{ scale: 1.02 }}
                                    className={`p-4 rounded-xl bg-gray-800 ${index === selectedService ? 'border border-pink-500' : ''}`}
                                  >
                                    <div className="flex justify-between items-center">
                                      <div>
                                        <p className="text-white font-medium">{service.name}</p>
                                        <div className="flex items-center">
                                          <Clock className="w-3 h-3 text-gray-400 mr-1" />
                                          <span className="text-gray-400 text-xs">{service.duration}</span>
                                        </div>
                                      </div>
                                      <div className="flex flex-col items-end">
                                        <span className="text-orange-500 font-bold">{service.price}</span>
                                        {index === selectedService && (
                                          <div className="w-4 h-4 rounded-full bg-pink-500 flex items-center justify-center mt-1">
                                            <CheckCircle className="w-3 h-3 text-white" />
                                          </div>
                                        )}
                                      </div>
                                    </div>
                                  </motion.div>
                                ))}
                              </div>
                              
                              {/* Continue button */}
                              <div className="absolute bottom-6 left-4 right-4">
                                <motion.button
                                  whileHover={{ scale: 1.03 }}
                                  whileTap={{ scale: 0.98 }}
                                  className="bg-gradient-to-r from-purple-500 to-pink-600 w-full py-3 rounded-xl text-white font-medium shadow-lg"
                                >
                                  Continue
                                </motion.button>
                              </div>
                            </div>
                          )}
                          
                          {currentScreen === 2 && (
                            <div className="px-4 h-full">
                              {/* Analytics screen */}
                              <div className="flex justify-between items-center mb-6">
                                <div>
                                  <h3 className="text-white text-xl font-bold">Your Activity</h3>
                                  <p className="text-gray-400 text-xs">Monthly statistics</p>
                                </div>
                                <div className="bg-gray-800 rounded-full w-10 h-10 flex items-center justify-center">
                                  <TrendingUp className="w-5 h-5 text-white" />
                                </div>
                              </div>
                              
                              {/* Statistics cards */}
                              <div className="grid grid-cols-2 gap-3 mb-6">
                                <div className="bg-gray-800 rounded-xl p-3">
                                  <div className="flex items-center space-x-2 mb-2">
                                    <div className="w-8 h-8 rounded-full bg-blue-500/20 flex items-center justify-center">
                                      <Calendar className="w-4 h-4 text-blue-500" />
                                    </div>
                                    <span className="text-gray-400 text-xs">Appointments</span>
                                  </div>
                                  <p className="text-white text-xl font-bold">{progress}</p>
                                  <div className="flex items-center mt-1">
                                    <div className="w-full h-1.5 bg-gray-700 rounded-full overflow-hidden">
                                      <motion.div 
                                        initial={{ width: 0 }}
                                        animate={{ width: `${progress}%` }}
                                        transition={{ duration: 1.5 }}
                                        className="h-full bg-blue-500 rounded-full"
                                      />
                                    </div>
                                    <span className="text-blue-500 text-xs ml-2">+12%</span>
                                  </div>
                                </div>
                                
                                <div className="bg-gray-800 rounded-xl p-3">
                                  <div className="flex items-center space-x-2 mb-2">
                                    <div className="w-8 h-8 rounded-full bg-purple-500/20 flex items-center justify-center">
                                      <Star className="w-4 h-4 text-purple-500" />
                                    </div>
                                    <span className="text-gray-400 text-xs">Reviews</span>
                                  </div>
                                  <p className="text-white text-xl font-bold">43</p>
                                  <div className="flex items-center mt-1">
                                    <div className="w-full h-1.5 bg-gray-700 rounded-full overflow-hidden">
                                      <div className="h-full bg-purple-500 rounded-full" style={{ width: '80%' }} />
                                    </div>
                                    <span className="text-purple-500 text-xs ml-2">+8%</span>
                                  </div>
                                </div>
                              </div>
                              
                              {/* Activity chart */}
                              <div className="bg-gray-800 rounded-xl p-4 mb-6">
                                <div className="flex justify-between items-center mb-4">
                                  <h4 className="text-white font-medium">Monthly activity</h4>
                                  <div className="flex space-x-1">
                                    <span className="px-2 py-1 rounded-md bg-purple-500/20 text-purple-500 text-xs">Month</span>
                                    <span className="px-2 py-1 rounded-md bg-gray-700 text-gray-400 text-xs">Year</span>
                                  </div>
                                </div>
                                
                                <div className="h-20 flex items-end justify-between">
                                  {[40, 65, 30, 80, 55, 45, 70].map((height, index) => (
                                    <motion.div
                                      key={index}
                                      initial={{ height: 0 }}
                                      animate={{ height: `${height}%` }}
                                      transition={{ duration: 1, delay: index * 0.1 }}
                                      className={`w-6 rounded-md ${index === 3 ? 'bg-gradient-to-t from-purple-600 to-pink-500' : 'bg-gray-700'}`}
                                    />
                                  ))}
                                </div>
                                
                                <div className="flex justify-between mt-2">
                                  {['M', 'T', 'W', 'T', 'F', 'S', 'S'].map((day, index) => (
                                    <span key={index} className="text-gray-500 text-xs">{day}</span>
                                  ))}
                                </div>
                              </div>
                              
                              {/* View report button */}
                              <div className="absolute bottom-6 left-4 right-4">
                                <motion.button
                                  whileHover={{ scale: 1.03 }}
                                  whileTap={{ scale: 0.98 }}
                                  className="bg-gradient-to-r from-blue-500 to-indigo-600 w-full py-3 rounded-xl text-white font-medium shadow-lg"
                                >
                                  View Full Report
                                </motion.button>
                              </div>
                            </div>
                          )}
                        </motion.div>
                      </AnimatePresence>
                    </div>
                  </div>
                </motion.div>
                
                {/* App icon chooser phone */}
                <motion.div
                  initial={{ opacity: 0, x: 40, y: 20 }}
                  animate={{ opacity: 1, x: 100, y: -80 }}
                  transition={{ duration: 0.5, delay: 0.8 }}
                  style={{ rotate: 15, perspective: 1000 }}
                  className="absolute w-[220px] h-[200px] bg-purple-500 rounded-3xl p-2 shadow-xl z-20"
                >
                  <div className="bg-gray-900 w-full h-full rounded-2xl p-3 flex flex-col">
                    <div className="text-center text-white text-sm mb-3">
                      Choose your app icon
                    </div>
                    <div className="bg-white rounded-lg flex-1 flex items-center justify-center">
                      <div className="bg-gradient-to-br from-orange-500 to-pink-600 w-16 h-16 rounded-xl flex items-center justify-center">
                        <Scissors className="h-8 w-8 text-white" />
                      </div>
                    </div>
                  </div>
                </motion.div>
                
                {/* Calendar widget phone */}
                <motion.div
                  initial={{ opacity: 0, x: -40, y: 20 }}
                  animate={{ opacity: 1, x: -120, y: 50 }}
                  transition={{ duration: 0.5, delay: 1 }}
                  style={{ rotate: -10, perspective: 1000 }}
                  className="absolute w-[140px] h-[140px] bg-indigo-500 rounded-3xl p-2 shadow-xl z-10"
                >
                  <div className="bg-gray-900 w-full h-full rounded-2xl p-2 flex flex-col items-center justify-center">
                    <div className="text-gray-400 text-xs mb-1">SUN</div>
                    <div className="text-white font-bold text-4xl">6</div>
                  </div>
                </motion.div>
              </div>
            </motion.div>
            
            {/* Floating elements */}
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.5, delay: 1.2 }}
              className="absolute top-0 right-0 animate-float"
            >
              <div className="bg-gradient-to-r from-blue-500 to-indigo-600 w-12 h-12 rounded-full flex items-center justify-center shadow-lg">
                <Calendar className="h-6 w-6 text-white" />
              </div>
            </motion.div>
            
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.5, delay: 1.4 }}
              className="absolute bottom-20 right-40 animate-float-slow"
            >
              <div className="bg-gradient-to-r from-purple-500 to-pink-600 w-10 h-10 rounded-full flex items-center justify-center shadow-lg">
                <Scissors className="h-5 w-5 text-white" />
              </div>
            </motion.div>
            
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.5, delay: 1.6 }}
              className="absolute top-40 left-10 animate-pulse"
            >
              <div className="bg-gradient-to-r from-amber-500 to-orange-600 w-8 h-8 rounded-full flex items-center justify-center shadow-lg">
                <Star className="h-4 w-4 text-white" />
              </div>
            </motion.div>
          </div>
        </div>
      </div>
    </section>
  );
};
